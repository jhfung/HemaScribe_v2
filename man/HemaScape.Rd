% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/HemaScape.R
\name{HemaScape}
\alias{HemaScape}
\title{Function for mapping query cells to a HemaScape reference using Symphony algorithm}
\usage{
HemaScape(input, vars = "orig.ident", sigma = 0.1)
}
\arguments{
\item{input}{A Seurat object with count data.}

\item{vars}{Query batch variable(s) to integrate over (column names in metadata of the Seurat object).}

\item{sigma}{Fuzziness parameter for soft clustering (sigma = 1 is hard clustering; default: 0.1).}
}
\value{
The Seurat object containing mapped results, including predicted branch assignments, density clusters, density cluster divided by branch, and pseudotime.
}
\description{
This function maps query cells to a pre-built HemaScape reference of the DensityPath trajectory using the Symphony algorithm.
It performs EE projection, and predicts branch assignments, density clusters, refined density clusters along each trajectory branch, and pseudotime.
}
\examples{
\dontrun{
library(HemaScribe)
library(GEOquery)
library(Seurat)
library(fs)

## Step 1: Download and load the LK dataset from GEO accession GSM7712015
# Download and rename files associated with the GEO accession
geo_accession <- "GSM7712015"
supp_files <- getGEOSuppFiles(geo_accession)
files <- dir_ls(geo_accession, regexp = "GSM7712015_AA003_")
file_move(files, path(geo_accession, path_file(files) \%>\% str_replace("GSM7712015_AA003_", "")))

# Read count data and create a Seurat object
count_mat <- Seurat::Read10X(geo_accession)
Seurat_obj <- CreateSeuratObject(counts = count_mat)

## Step 2: Specify meta column indicating the sequencing batch (default using "orig.ident" column)
Seurat_obj$Seq_batch_ID <- rep(1, ncol(Seurat_obj))

## Step 3: Perform HemaScape mapping
# Run the HemaScape function on the Seurat object
Seurat_obj <- HemaScape(
  input = Seurat_obj,
  vars = 'Seq_batch_ID'
)

## Step 4: Inspect the results
# View predicted branch assignments on predicted EE embedding
DimPlot(Seurat_obj,reduction = 'EE', group.by='branch_pred')

# View predicted density clusters on predicted EE embedding
DimPlot(Seurat_obj,reduction = 'EE', group.by='density_cluster_pred')

# View predicted refined density clusters along each trajectory branch on predicted EE embedding
DimPlot(Seurat_obj,reduction = 'EE', group.by='branch_segment_clusters_pred')

# View predicted pseudotime on predicted EE embedding
FeaturePlot(Seurat_obj, features = "pseudotime_pred", reduction = "EE")
}

}
\seealso{
\code{\link{HemaScape}} for more details on the function.
}
